; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
src_dir = src
build_cache_dir = .pio/.cache
default_envs =
  ; 8266_ota
  ; 32_thermostat
  ; 32_thermostat_debug
  ; 8266_thermostat
  8266_thermostat_debug
  ; 32_spiffs
  ; 8266_spiffs

[common]
framework = arduino

extra_scripts = 
  pre:build_number.py

lib_deps =
  901@~3.0.0      ;BME280
  2029@~1.17.0    ;DHT sensor library for ESPx
  617@~2.4.0      ;MQTT
  562@~4.1.0      ;ESP8266_SSD1306
  64@~6.13.0      ;ArduinoJson
  1106@~2.53      ;Bounce2

;================================================================================
;================================================================================
[esp8266]
framework = ${common.framework}
; *** Esp8266 core for Arduino version 2.6.3
platform = espressif8266@2.6.2
; *** Esp8266 core for Arduino version latest beta
;platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = esp07
board_build.flash_mode = dout
board_build.f_cpu = 80000000L ; set CPU frequency to 80MHz (default) or 160MHz
board_build.f_flash = 40000000L ; Custom FLASH Frequency 40 MHz (default)
board_build.ldscript = eagle.flash.1m64.ld
extra_scripts = ${common.extra_scripts}
board_build.filesystem = littlefs
build_flags =
  -mtarget-align
  ; -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
  -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
  ; -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
  ; -DPIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_LOW_MEMORY
  -DVTABLES_IN_IRAM
  -DCFG_BOARD_ESP8266
  -DDEBUG_ESP_PORT=Serial
  ; -DDEBUG_ESP_CORE
  -fexceptions

; *** Serial Monitor options
monitor_speed = 115200
monitor_port = COM3
monitor_filters = time, esp8266_exception_decoder

; *** Serial upload
upload_speed = 115200
upload_resetmethod = ck
; upload_port = COM3

; *** OTA upload
upload_protocol = espota
upload_port = 192.168.178.137 ;prototype.local
; upload_port = 192.168.178.31 ;buero.local
; upload_port = 192.168.178.32 ;wohnzimmer.local
; upload_port = 192.168.178.34 ;kinderzimmer_1.local

[env:8266_ota]  ; tbd
extends = esp8266
build_flags =
  ${esp8266.build_flags}
  -DCFG_OTA_ONLY

[env:8266_thermostat]
extends = esp8266
lib_deps = ${common.lib_deps}

[env:8266_thermostat_debug]
extends = esp8266
; build_type = debug
build_flags =
  ${env:8266_thermostat.build_flags}
  -DCFG_DEBUG
  -DCFG_DEBUG_DISPLAY_VERSION
  ; -DCFG_DEBUG_SENSOR_VALUES
  ; -DCFG_DEBUG_SNTP
lib_deps = ${common.lib_deps}

[env:8266_spiffs]
extends = esp8266
targets = buildfs, uploadfs

;================================================================================
;================================================================================
[esp32]
framework = ${common.framework}
platform = espressif32@1.12.4  ;current stable
; platform = espressif32  ;current stable
;platform = https://github.com/platformio/platform-espressif32.git

board = az-delivery-devkit-v4
; board = lolin_d32_pro

build_flags =
  -DCFG_BOARD_ESP32
  ; -DDEBUG_ESP_PORT=Serial
extra_scripts = ${common.extra_scripts}

monitor_speed = 115200
monitor_port = COM3
monitor_filters = time, esp32_exception_decoder
; upload_protocol = esp-prog
upload_speed = 115200
upload_resetmethod = ck
; upload_protocol = esptool
; upload_port = COM3

upload_protocol = espota
upload_flags =
  --port=8266
upload_port = 192.168.178.120  ;ESP32 (WROOM)
; upload_port = 192.168.178.121  ;ESP32 (WROVER)
; test_build_project_src = yes

[env:32_thermostat]
extends = esp32
lib_deps = ${common.lib_deps}

[env:32_thermostat_debug]
extends = esp32
build_type = debug
debug_tool = esp-prog
; debug_init_break = tbreak setup
build_flags =
  ${env:32_thermostat.build_flags}
  -DCFG_DEBUG
  -DCFG_DEBUG_DISPLAY_VERSION
  ; -DCFG_DEBUG_SENSOR_VALUES
  -DCFG_DEBUG_SNTP
; debug_build_flags = -O0 -ggdb3 -g3
lib_deps = ${common.lib_deps}

[env:32_spiffs]
extends = esp32
targets = buildfs, uploadfs
